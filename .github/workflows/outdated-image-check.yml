name: Outdated Image Check
on:
  workflow_dispatch:
  schedule:
    - cron:  '20 18 * * MON'
jobs:
  outdated-image-check:
    runs-on: [csetubuntu]
    timeout-minutes: 30
    steps:
      - uses: actions/checkout@8ade135a41bc03ea155e62e844d188df1ea18608
      - name: Get Secrets
        id: secrets
        run: |
          SECRET=$(aws secretsmanager get-secret-value --region us-west-2 --secret-id '/CICD/artifactory' --query 'SecretString' --output text)
          USERNAME=$(echo ${SECRET} | jq -r .username)
          PASSWORD=$(echo ${SECRET} | jq -r .password)
          echo "::set-output name=artifactory-username::${USERNAME}"
          echo "::add-mask::$USERNAME"
          echo "::set-output name=artifactory-password::${PASSWORD}"
          echo "::add-mask::$PASSWORD"

          SECRET=$(aws secretsmanager get-secret-value --region us-west-2 --secret-id '/Secrets/slack' --query 'SecretString' --output text)
          SLACK_WEBHOOK_URL=$(echo ${SECRET} | jq -r .webhook)
          echo "::set-output name=slack-webhook-url::${SLACK_WEBHOOK_URL}"
          echo "::add-mask::$SLACK_WEBHOOK_URL"
      - name: Pull down credentials
        run: |
          export AWS_REGION='us-west-2'
          aws secretsmanager get-secret-value --region us-west-2 --secret-id /KeePass/K8s/p3pabuse01-client.crt | jq -r '.SecretString' > ./.github/static/p3pabuse01-client.crt
          aws secretsmanager get-secret-value --region us-west-2 --secret-id /KeePass/K8s/p3pabuse01-client.key | jq -r '.SecretString' > ./.github/static/p3pabuse01-client.key
      - name: Configure kubeconfigs
        run: |
          export AWS_REGION='us-west-2'
          aws secretsmanager get-secret-value --region us-west-2 --secret-id /KeePass/K8s/dev-ng-client.crt | jq -r '.SecretString' > ./.github/static/dev-ng-client.crt
          aws secretsmanager get-secret-value --region us-west-2 --secret-id /KeePass/K8s/dev-ng-client.key | jq -r '.SecretString' > ./.github/static/dev-ng-client.key
          aws secretsmanager get-secret-value --region us-west-2 --secret-id /KeePass/K8s/prod-ng-client.crt | jq -r '.SecretString' > ./.github/static/prod-ng-client.crt
          aws secretsmanager get-secret-value --region us-west-2 --secret-id /KeePass/K8s/prod-ng-client.key | jq -r '.SecretString' > ./.github/static/prod-ng-client.key
      - uses: actions/setup-python@65d7f2d534ac1bc67fcd62888c5f4f3d2cb2b236
        with:
          python-version: 3.11.1
          architecture: 'x64'
      - uses: azure/setup-kubectl@901a10e89ea615cf61f57ac05cecdf23e7de06d8
        with:
          version: 'v1.16.3'
      - name: Docker login for Artifactory
        env:
          ARTIFACTORY_USER: ${{ steps.secrets.outputs.artifactory-username }}
          ARTIFACTORY_PASSWORD: ${{ steps.secrets.outputs.artifactory-password }}
        run: docker login -u ${ARTIFACTORY_USER} -p ${ARTIFACTORY_PASSWORD} gdartifactory1.jfrog.io/docker-dcu-local
      - name: Results
        run: chmod +x ${GITHUB_WORKSPACE}/.github/check_image_updates.sh && ${GITHUB_WORKSPACE}/.github/check_image_updates.sh
        env:
          SLACK_CHANNEL: ise-oncall-notifications
          SLACK_WEBHOOK_URL: ${{ steps.secrets.outputs.slack-webhook-url }}
