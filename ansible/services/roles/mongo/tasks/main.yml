---
- name: Install MongoDB 3.6 Repo
  ansible.builtin.yum_repository:
    name: mongodb
    baseurl: https://repo.mongodb.org/yum/redhat/$releasever/mongodb-org/3.6/x86_64/
    enabled: yes
    gpgcheck: yes
    gpgkey: https://www.mongodb.org/static/pgp/server-3.6.asc
    description: MongoDB 3.6 Repo
- name: Install MongoDB base package
  dnf:
    name: mongodb-org == 3.6.23
    state: present
- name: Install MongoDB server
  dnf:
    name: mongodb-org-server == 3.6.23
    state: present
- name: Install MongoDB shell
  dnf:
    name: mongodb-org-shell == 3.6.23
    state: present
- name: Install MongoDB mongos
  dnf:
    name: mongodb-org-mongos == 3.6.23
    state: present
- name: Install MongoDB mongos
  dnf:
    name: mongodb-org-tools == 3.6.23
    state: present
- name: Version lock mongo packages
  community.general.dnf_versionlock:
    name:
      - mongodb-org
      - mongodb-org-server
      - mongodb-org-shell
      - mongodb-org-mongos
      - mongodb-org-tools
    state: present
- name: Copy remote chain.crt
  template:
    src: templates/mongo-chain.crt.j2
    dest: /etc/mongo-chain.crt
    owner: root
    group: mongod
    mode: 0660
- name: Combine root certs and chain crt to make mongo-ca.pem
  shell: cat /etc/ssl/certs/ca-bundle.crt /etc/mongo-chain.crt > /etc/mongo-ca.pem
- name: Give permission for ca
  shell: chgrp mongod /etc/mongo-ca.pem
- name: Copy remote mongo.pem 
  template:
    src: templates/mongo.pem.j2
    dest: /etc/mongo.pem
    owner: root
    group: mongod
    mode: 0660
- name: Copy local only mongod config
  template:
    src: mongod.local.conf.j2
    dest: /etc/mongod.conf
    owner: root
    group: root
    mode: 0644
- name: Enable service mongod
  systemd:
    name: mongod
    enabled: yes
    masked: no
    daemon_reload: yes
    state: restarted
- name: Install pymongo
  pip:
    name: pymongo
- name: Create mongo admin user
  community.mongodb.mongodb_user:
    database: admin
    name: "{{ lookup('amazon.aws.aws_secret', '/KeePass/MongoDB/phishstory/dev/superAdmin', bypath=true)['/KeePass/MongoDB/phishstory/dev/superAdmin'] | from_json | json_query('username') }}"
    password: "{{ lookup('amazon.aws.aws_secret', '/KeePass/MongoDB/phishstory/dev/superAdmin', bypath=true)['/KeePass/MongoDB/phishstory/dev/superAdmin'] | from_json | json_query('password') }}"
    state: present
    roles:
      - dbAdminAnyDatabase
      - userAdminAnyDatabase
      - readWriteAnyDatabase
- name: Copy remote mongod config
  template:
    src: mongod.remote.conf.j2
    dest: /etc/mongod.conf
    owner: root
    group: root
    mode: 0644
- name: Enable service mongod
  systemd:
    name: mongod
    enabled: yes
    masked: no
    daemon_reload: yes
    state: restarted