metricbeat.config.modules:
  # Mounted `metricbeat-daemonset-modules` configmap:
  path: ${path.config}/modules.d/*.yml
  # Reload module configs as they change:
  reload.enabled: false
metricbeat.autodiscover:
  providers:
    - type: kubernetes
      scope: cluster
      node: ${NODE_NAME}
      # In large Kubernetes clusters consider setting unique to false
      # to avoid using the leader election strategy and
      # instead run a dedicated Metricbeat instance using a Deployment in addition to the DaemonSet
      unique: true
      templates:
        - config:
            - module: kubernetes
              hosts: ["kube-state-metrics.kube-system.svc.cluster.local:8080"]
              period: 30s
              add_metadata: true
              metricsets:
                - state_node
                - state_deployment
                - state_daemonset
                - state_replicaset
                - state_pod
                - state_container
                - state_job
                - state_cronjob
                - state_resourcequota
                - state_statefulset
                - state_service
            - module: kubernetes
              metricsets:
                - event
            - module: rabbitmq
              period: 60s
              hosts: "${RABBITMQ_HOSTS}"
              username: "${RABBITMQ_USER}"
              password: "${RABBITMQ_PASS}"
              metricsets:
                - connection
            - module: rabbitmq
              period: 30s
              hosts: "${RABBITMQ_HOSTS}"
              username: "${RABBITMQ_USER}"
              password: "${RABBITMQ_PASS}"
            - module: mongodb
              metricsets:
                - status
                - dbstats
              hosts: "${MONGODB_URL}"
                
# ======================= Elasticsearch template setting =======================
setup.template.settings:
  index.number_of_shards: 1
  index.codec: best_compression

# ================================= Dashboards =================================
# These settings control loading the sample dashboards to the Kibana index. Loading
# the dashboards is disabled by default and can be enabled either by setting the
# options here or by using the `setup` command.
setup.dashboards.enabled: false

# =================================== Kibana ===================================
# Starting with Beats version 6.0.0, the dashboards are loaded via the Kibana API.
# This requires a Kibana endpoint configuration.
setup.kibana:
  # Kibana Host
  # Scheme and port can be left out and will be set to the default (http and 5601)
  # In case you specify and additional path, the scheme is required: http://localhost:5601/path
  # IPv6 addresses should always be defined as: https://[2001:db8::1]:5601
  #host: "localhost:5601"
  # Kibana Space ID
  # ID of the Kibana Space into which the dashboards should be loaded. By default,
  # the Default Space will be used.
  #space.id:

# ================================= Processors =================================
# Configure processors to enhance or manipulate events generated by the beat.
processors:
  - add_cloud_metadata:
  - add_host_metadata: 
  - add_docker_metadata: 
  - add_kubernetes_metadata: 
  - drop_event:
      when:
        and:
          - has_fields:
              - 'error.message'
          - equals:
              event.dataset: rabbitmq.queue

# =============================== Elastic Cloud ================================
cloud.id: ${ELASTIC_DEPLOYMENT}
cloud.auth: ${ELASTIC_USER}:${ELASTIC_PASS}

# ================================== Outputs ===================================
# Configure what output to use when sending the data collected by the beat.
# ---------------------------- Elasticsearch Output ----------------------------
output.elasticsearch:
  hosts: ["localhost:9200"]
  username: ${ELASTIC_USER}
  password: ${ELASTIC_PASS}