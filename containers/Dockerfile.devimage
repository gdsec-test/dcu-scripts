FROM python:3.7.10-slim
# Basic build tools.
RUN apt-get update -y
RUN apt-get install -y curl apt-transport-https ca-certificates gnupg lsb-release
RUN curl -fsSLo /usr/share/keyrings/kubernetes-archive-keyring.gpg https://packages.cloud.google.com/apt/doc/apt-key.gpg
RUN curl -fsSL https://download.docker.com/linux/debian/gpg | gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg
RUN echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/debian $(lsb_release -cs) stable" | tee /etc/apt/sources.list.d/docker.list > /dev/null
RUN echo "deb [signed-by=/usr/share/keyrings/kubernetes-archive-keyring.gpg] https://apt.kubernetes.io/ kubernetes-xenial main" | tee /etc/apt/sources.list.d/kubernetes.list
RUN apt-get update -y
RUN apt-get install -y build-essential git tcpdump jq procps htop kubectl direnv docker-ce docker-ce-cli containerd.io
RUN echo "$(direnv hook bash)" >> /etc/bash.bashrc
# Install GoLang
RUN curl https://dl.google.com/go/go1.17.8.linux-amd64.tar.gz > go1.17.8.linux-amd64.tar.gz
RUN tar -xvf go1.17.8.linux-amd64.tar.gz
RUN mv go /usr/local/
RUN cp /usr/local/go/bin/* /usr/local/bin
# Install GoLang tools
RUN go install -v github.com/ramya-rao-a/go-outline@latest
RUN go install -v github.com/cweill/gotests/gotests@latest
RUN go install -v github.com/fatih/gomodifytags@latest
RUN go install -v github.com/josharian/impl@latest
RUN go install -v github.com/haya14busa/goplay/cmd/goplay@latest
RUN go install -v github.com/go-delve/delve/cmd/dlv@latest
RUN go install -v honnef.co/go/tools/cmd/staticcheck@latest
RUN go install -v golang.org/x/tools/gopls@latest
RUN go install -v github.com/tsenart/vegeta@latest
# Install ASDF and the primary tool versions
RUN git clone https://github.com/asdf-vm/asdf.git ~/.asdf --branch v0.9.0
RUN echo ". ~/.asdf/asdf.sh" >> /etc/bash.bashrc
RUN echo ". ~/.asdf/completions/asdf.bash" >> /etc/bash.bashrc
RUN bash -c "source ~/.asdf/asdf.sh && asdf plugin add nodejs https://github.com/asdf-vm/asdf-nodejs.git"
RUN bash -c "source ~/.asdf/asdf.sh && asdf plugin add python"
RUN bash -c "source ~/.asdf/asdf.sh && asdf install nodejs 14.17.5"
RUN apt-get install -y zlib1g-dev libbluetooth-dev libbz2-dev libc6-dev libexpat1-dev libffi-dev libgdbm-dev liblzma-dev libncursesw5-dev libreadline-dev libsqlite3-dev libssl-dev tk-dev uuid-dev xz-utils zlib1g-dev
RUN bash -c "source ~/.asdf/asdf.sh && asdf install python 3.7.10"
RUN bash -c "source ~/.asdf/asdf.sh && asdf global python 3.7.10"
RUN bash -c "source ~/.asdf/asdf.sh && asdf global nodejs 14.17.5"
RUN bash -c "source ~/.asdf/asdf.sh && pip install poetry"
# pipx tools
RUN python3 -m pip install --user pipx
RUN bash -c "source ~/.asdf/asdf.sh && echo 'alias pipx=\"python -m pipx\"' >> /etc/bash.bashrc"
RUN python -m pipx install pre-commit
RUN python -m pipx install tartufo
RUN python -m pipx install poetry
RUN cp /root/.local/bin/poetry /usr/local/bin/
RUN python -m pipx ensurepath
RUN echo "poetry config virtualenvs.in-project true" >> /root/.bashrc
# Configure npmrc
RUN echo "//\${NPM_REGISTRY}:_authToken=\${NPM_TOKEN}" >> ~/.npmrc
RUN echo "registry=https://\${NPM_REGISTRY}" >> ~/.npmrc
# Install kustomize
RUN curl -L https://github.com/kubernetes-sigs/kustomize/releases/download/kustomize%2Fv4.5.4/kustomize_v4.5.4_linux_amd64.tar.gz > kustomize.tar.gz
RUN tar xf kustomize.tar.gz
RUN mv kustomize /usr/local/bin/
RUN rm kustomize.tar.gz
# docker-compose
RUN curl -L "https://github.com/docker/compose/releases/download/1.29.2/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
RUN chmod +x /usr/local/bin/docker-compose
